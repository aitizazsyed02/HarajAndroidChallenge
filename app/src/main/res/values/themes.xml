<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools">

    <style name="Theme.MyApp.NoActionBar.FullScreen" parent="Theme.MyApp.NoActionBar">
        <item name="android:windowFullscreen">true</item>
    </style>

    <style name="Theme.MyApp.FullScreen" parent="Theme.MyApp">
        <item name="android:windowFullscreen">true</item>
    </style>

    <style name="Theme.MyApp.NoActionBar" parent="Theme.MyApp">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <style name="Theme.MyApp.NoActionBar.TransparentStatusBarColor" parent="Theme.MyApp.NoActionBar">
        <item name="android:windowTranslucentStatus">true</item>
        <item name="android:statusBarColor">@android:color/transparent</item>
        <!--        <item name="android:windowTranslucentNavigation">false</item>-->
        <!--        <item name="android:windowFullscreen">true</item>-->
    </style>

    <style name="Theme.MyApp.PopupOverlay" parent="ThemeOverlay.MaterialComponents.Light">
        <item name="colorPrimary">?attr/colorOnPrimary</item>
        <item name="itemIconTint">?attr/colorOnSurface</item>
        <item name="itemTextColor">?attr/colorOnSurface</item>
    </style>

    <style name="Theme.MyApp.AppBarOverlay" parent="ThemeOverlay.MaterialComponents.Light">
        <item name="colorPrimary">?attr/colorOnPrimary</item>
    </style>

    <style name="Theme.MyApp.Title" parent="Theme.MyApp">
        <!--        <item name="windowActionBar">true</item>-->
        <!--        <item name="windowNoTitle">false</item>-->
        <item name="actionBarStyle">@style/Widget.MyTheme.ActionBar.Primary</item>
    </style>

    <!--Top level DayNight theme to be used in AndroidManifest.xml-->
    <style name="Theme.MyApp" parent="Base.Theme.MyApp">
        <!--Material color attributes (light theme) -->
        <!--colorPrimary colors map to components and elements, such as app bars and buttons. -->
        <!--colorSecondary colors are most often used as accents on components, such as FABs and -->
        <!--selection controls.-->
        <item name="colorPrimary">@color/orange_700</item>
        <item name="colorPrimaryVariant">@color/orange_50</item>
        <item name="colorSecondary">@color/orange_500</item>
        <item name="colorSecondaryVariant">@color/orange_300</item>
        <!--colorBackground appears behind scrollable content and is used for the default window-->
        <!--background. colorSurface is mapped to the surface of components such as cards, sheets-->
        <!--and menus. colorError is used to indicate an error state for components such as-->
        <!--text fields.-->
        <item name="android:colorBackground">@color/white_50</item>
        <item name="colorSurface">@color/white_50</item>
        <item name="colorError">@color/red_600</item>
        <!--"On" colors define how text, icons and strokes are colored in relation to the surface-->
        <!--on which they appear.-->
        <item name="colorOnPrimary">@color/white_50</item>
        <item name="colorOnSecondary">@color/black_900</item>
        <item name="colorOnBackground">@color/black_900</item>
        <item name="colorOnSurface">@color/black_900</item>
        <item name="colorOnError">@color/white_50</item>
        <item name="overlay">@color/black_overlay</item>

        <item name="android:windowLightStatusBar" tools:targetApi="m">true</item>
        <item name="android:windowLightNavigationBar" tools:targetApi="o_mr1">true</item>
        <item name="actionBarStyle">@style/Widget.MyTheme.ActionBar.Primary.NoTitle</item>
    </style>

    <!--Top level DayNight theme to be used in AndroidManifest.xml-->
    <style name="Base.Theme.MyApp" parent="Theme.MaterialComponents.DayNight">

        <!--Material type attributes-->
        <item name="textAppearanceHeadline1">@style/TextAppearance.MyTheme.Headline1</item>
        <item name="textAppearanceHeadline2">@style/TextAppearance.MyTheme.Headline2</item>
        <item name="textAppearanceHeadline3">@style/TextAppearance.MyTheme.Headline3</item>
        <item name="textAppearanceHeadline4">@style/TextAppearance.MyTheme.Headline4</item>
        <item name="textAppearanceHeadline5">@style/TextAppearance.MyTheme.Headline5</item>
        <item name="textAppearanceHeadline6">@style/TextAppearance.MyTheme.Headline6</item>
        <item name="textAppearanceSubtitle1">@style/TextAppearance.MyTheme.Subtitle1</item>
        <item name="textAppearanceSubtitle2">@style/TextAppearance.MyTheme.Subtitle2</item>
        <item name="textAppearanceBody1">@style/TextAppearance.MyTheme.Body1</item>
        <item name="textAppearanceBody2">@style/TextAppearance.MyTheme.Body2</item>
        <item name="textAppearanceButton">@style/TextAppearance.MyTheme.Button</item>
        <item name="textAppearanceCaption">@style/TextAppearance.MyTheme.Caption</item>
        <item name="textAppearanceOverline">@style/TextAppearance.MyTheme.Overline</item>

        <!--Material shape attributes-->
        <item name="shapeAppearanceSmallComponent">@style/ShapeAppearance.MyTheme.SmallComponent
        </item>
        <item name="shapeAppearanceMediumComponent">@style/ShapeAppearance.MyTheme.MediumComponent
        </item>
        <item name="shapeAppearanceLargeComponent">@style/ShapeAppearance.MyTheme.LargeComponent
        </item>

        <!--Component styles-->
        <item name="materialCardViewStyle">@style/Widget.MyTheme.CardView</item>
        <item name="materialButtonStyle">@style/Widget.MyTheme.Button</item>
        <item name="android:statusBarColor">?android:attr/colorBackground</item>
        <item name="android:navigationBarDividerColor" tools:targetApi="o_mr1">
            ?attr/colorControlHighlight
        </item>
        <item name="android:navigationBarColor">?attr/colorOnPrimary</item>

        <!--        <item name="android:windowEnterAnimation">@android:anim/accelerate_decelerate_interpolator</item>-->
        <!--        <item name="android:windowExitAnimation">@android:anim/slide_out_right</item>-->
        <item name="android:windowActivityTransitions">true</item>
        <item name="android:windowContentTransitions">true</item>
        <!--        <item name="android:windowAllowEnterTransitionOverlap">false</item>-->
        <!--        <item name="android:windowAllowReturnTransitionOverlap">false</item>-->
        <!--        <item name="android:windowSharedElementEnterTransition">@transition/shared</item>-->
        <!--        <item name="android:windowSharedElementExitTransition">@transition/shared</item>-->
    </style>

</resources>